export default {
  name: 'stats',
  aliases: ['—Å—Ç–∞—Ç—ã', '—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏'],
  description: '–ø–æ–∫–∞–∑–∞—Ç—å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∏–≥—Ä–æ–∫–∞',

  /**
   * @param {import('../GameEngine').GameEngine} game
   * @param {import('../classes/CommandManager').ParsedCommand} cmd
   * @returns {string}
   */
  execute(game, cmd) {
    const p = game.player;
    const c = game.colorize;

    const stateText = p.state === 'fighting' 
      ? c('–≤ –±–æ—é', 'combat-npc-death') 
      : p.state === 'dead' 
        ? c('–º–µ—Ä—Ç–≤', 'player-dead-look') 
        : c('–≥–æ—Ç–æ–≤', 'combat-exp-gain');

    const hpPercentage = p.maxHitPoints > 0 ? p.hitPoints / p.maxHitPoints : 0;
    const hpFullLength = Math.round(10 * hpPercentage);
    const hpEmptyLength = 10 - hpFullLength;
    const hpBar = `${c('‚ñà', 'combat-npc-death').repeat(hpFullLength)}${c('‚ñë', 'npc-dead').repeat(hpEmptyLength)}`;

    const expPercentage = p.experienceToNext > 0 ? p.experience / p.experienceToNext : 0;
    const expFullLength = Math.round(10 * expPercentage);
    const expEmptyLength = 10 - expFullLength;
    const expBar = `${c('‚ñà', 'room-name').repeat(expFullLength)}${c('‚ñë', 'npc-dead').repeat(expEmptyLength)}`;

    const staminaPercentage = p.maxStamina > 0 ? p.stamina / p.maxStamina : 0;
    const staminaFullLength = Math.round(10 * staminaPercentage);
    const staminaEmptyLength = 10 - staminaFullLength;
    const staminaBar = `${c('‚ñà', 'exit-name').repeat(staminaFullLength)}${c('‚ñë', 'npc-dead').repeat(staminaEmptyLength)}`;

    const header = c(`---[ –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏: ${p.name} ]--------`, 'room-name');
    const footer = c('------------------------------------', 'room-name');

    const lines = [
      `  ${c('–£—Ä–æ–≤–µ–Ω—å:'.padEnd(15), 'info-label')} ${p.level}`,
      `  ${c('–û–ø—ã—Ç:'.padEnd(15), 'info-label')} [${expBar}] ${p.experience}/${p.experienceToNext}`,
      `  ${c('–ó–¥–æ—Ä–æ–≤—å–µ:'.padEnd(15), 'info-label')} [${hpBar}] ${p.hitPoints}/${p.maxHitPoints}`,
      `  ${c('–í—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å:'.padEnd(15), 'info-label')} [${staminaBar}] ${p.stamina}/${p.maxStamina}`,
      ``,
      `  üí™ ${c('–°–∏–ª–∞:'.padEnd(13), 'info-label')} ${p.strength}`,
      `  ‚ö° ${c('–õ–æ–≤–∫–æ—Å—Ç—å:'.padEnd(13), 'info-label')} ${p.dexterity}`,
      `  üõ°Ô∏è ${c('–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ:'.padEnd(13), 'info-label')} ${p.constitution}`,
      `  üß† ${c('–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç:'.padEnd(13), 'info-label')} ${p.intelligence}`,
      `  üîÆ ${c('–ú—É–¥—Ä–æ—Å—Ç—å:'.padEnd(13), 'info-label')} ${p.wisdom}`,
      `  üòä ${c('–•–∞—Ä–∏–∑–º–∞:'.padEnd(13), 'info-label')} ${p.charisma}`,
      ``,
      `  üí∞ ${c('–ó–æ–ª–æ—Ç–æ:'.padEnd(14), 'info-label')} ${p.gold}`,
      ``,
      `  –°–æ—Å—Ç–æ—è–Ω–∏–µ: ${stateText}`
    ];

    return [header, ...lines, footer].join('\n');
  }
};